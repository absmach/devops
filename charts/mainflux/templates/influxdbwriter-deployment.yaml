# Copyright (c) Mainflux
# SPDX-License-Identifier: Apache-2.0

{{- if .Values.influxdb.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-influxdb-writer-config
data:
  subjects.toml: |
    # If you want to listen on all subjects, just pass one element ["channels.>"], otherwise
    # pass the list of subjects (e.g ["channels.<channel_id>", "channels.<channel_id>.sub.topic.x", ...]).
    [subjects]
    filter = ["channels.>"]
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-influxdb-writer
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }}
      component: influxdb-writer
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "{{ .Values.influxdb.writer.httpPort }}"
        prometheus.io/scrape: "true"
      labels:
        app: {{ .Release.Name }}
        component: influxdb-writer
    spec:
      containers:
        - env:
            - name: MF_JAEGER_URL
              value: "http://{{ .Release.Name }}-jaeger-collector:{{ .Values.defaults.jaegerCollectorPort }}/api/traces"
            - name: MF_INFLUX_WRITER_LOG_LEVEL
              value: debug
            - name: MF_BROKER_URL
              value: nats://{{ .Release.Name }}-nats-client:{{ .Values.defaults.natsPort }}
            - name: MF_INFLUX_WRITER_PORT
              value: "{{ .Values.influxdb.writer.httpPort }}"
            - name: MF_INFLUX_WRITER_BATCH_SIZE
              value: "5000"
            - name: MF_INFLUX_WRITER_BATCH_TIMEOUT
              value: "5"
            - name: MF_INFLUXDB_BUCKET
              value: "{{ .Values.influxdb.auth.admin.bucket }}"
            - name: MF_INFLUXDB_DBURL
              value: "http://{{ .Release.Name }}-influxdb:{{ .Values.influxdb.dbPort }}"
            - name: MF_INFLUXDB_TOKEN
              value: "{{ .Values.influxdb.auth.admin.token }}"
            - name: MF_INFLUXDB_ORG
              value: "{{ .Values.influxdb.auth.admin.org }}"
            - name: MF_INFLUXDB_HOST
              value: {{ .Release.Name }}-influxdb
            - name: MF_INFLUXDB_PORT
              value: "{{ .Values.influxdb.dbPort }}"
            - name: MF_INFLUXDB_TIMEOUT
              value: 60s
            - name: MF_INFLUXDB_USER_AGENT
              value: influxdb-writer
            - name: MF_INFLUX_WRITER_CONFIG_PATH
              value: "{{ .Values.influxdb.configPath }}"
            - name: MF_INFLUX_WRITER_CONTENT_TYPE
              value: "{{ .Values.influxdb.contentType }}"
            - name: MF_INFLUX_WRITER_TRANSFORMER
              value: "{{ .Values.influxdb.transformer }}"
          image: "{{ default .Values.defaults.image.repository .Values.influxdb.writer.image.repository }}/influxdb-writer:{{ default .Values.defaults.image.tag .Values.influxdb.writer.image.tag }}"
          imagePullPolicy: {{ default .Values.defaults.image.pullPolicy .Values.influxdb.writer.image.pullPolicy }}
          name: {{ .Release.Name }}-influxdb-writer
          ports:
            - containerPort: {{ .Values.influxdb.writer.httpPort }}
              protocol: TCP
          stdin: true
          tty: true
          volumeMounts:
            - mountPath: {{ .Values.influxdb.configPath }}
              name: influxdb-writer-config
              subPath: subjects.toml
      {{- with .Values.defaults.image.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 12 }}
      {{- end }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      volumes:
        - configMap:
            defaultMode: 256
            name: {{ .Release.Name }}-influxdb-writer-config
            optional: false
          name: influxdb-writer-config
{{- end }}
