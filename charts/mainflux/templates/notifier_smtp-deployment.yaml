# Copyright (c) Mainflux
# SPDX-License-Identifier: Apache-2.0

{{- if .Values.notifier_smtp.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-email-notifier-config
data:
  email.tmpl: |
    To: {{`{{range $index, $v := .To}}{{if $index}},{{end}}{{$v}}{{end}}`}}
    From: {{`{{.From}}`}}
    Subject: {{`{{.Subject}}`}}
    {{`{{.Header}}`}}
    You have a new message:
    {{`{{.Content}}`}}
    {{`{{.Footer}}`}}
  config.toml: |
    # To listen all messsage broker subjects use default value "channels.>".
    # To subscribe to specific subjects use values starting by "channels." and
    # followed by a subtopic (e.g ["channels.<channel_id>.sub.topic.x", ...]).
    [subjects]
    filter = ["channels.>"]
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-notifier-smtp
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }}
      component: notifier-smtp
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "{{ .Values.notifier_smtp.httpPort }}"
        prometheus.io/scrape: "true"
      labels:
        app: {{ .Release.Name }}
        component: notifier-smtp
    spec:
{{- if .Values.notifier_smtp.nodeSelector }}
      nodeSelector: {{- .Values.notifier_smtp.nodeSelector | toYaml | nindent 8 }}
{{- end }}
      tolerations:
        - key: "node-role.kubernetes.io/master"
          effect: "NoSchedule"
          operator: "Exists"
      containers:
        - env:
            - name: MF_EMAIL_USERNAME
              value: "{{ .Values.notifier_smtp.username }}"
            - name: MF_EMAIL_TEMPLATE
              value: "/smtp-notifier.tmpl"
            - name: MF_EMAIL_PASSWORD
              value: "{{ .Values.notifier_smtp.password }}"
            - name: MF_EMAIL_SECRET
              value: "{{ .Values.notifier_smtp.secret }}"
            - name: MF_EMAIL_FROM_NAME
              value: "{{ .Values.notifier_smtp.fromName }}"
            - name: MF_EMAIL_FROM_ADDRESS
              value: "{{ .Values.notifier_smtp.fromEmail }}"
            - name: MF_SMTP_NOTIFIER_FROM_ADDR
              value: "{{ .Values.notifier_smtp.fromEmail }}"
            - name: MF_EMAIL_PORT
              value: "{{ .Values.notifier_smtp.smtpPort }}"
            - name: MF_EMAIL_HOST
              value: "{{ .Values.notifier_smtp.emailHost }}"
            - name: MF_JAEGER_URL
              value: "http://{{ .Release.Name }}-jaeger-collector:{{ .Values.defaults.jaegerCollectorPort }}/api/traces"
            - name: MF_SMTP_NOTIFIER_DB
              value: {{ index .Values  "postgresqlnotifiersmtp" "auth" "database" }}
            - name: MF_SMTP_NOTIFIER_DB_HOST
            {{- if .Values.postgresqlnotifiersmtp.enabled }}
              value: {{ .Release.Name }}-postgresqlnotifiersmtp
            {{- else }}
              value: {{ .Values.postgresqlnotifiersmtp.postgresqlHost | quote }}
            {{- end }}
            - name: MF_SMTP_NOTIFIER_DB_PASS
              value: {{ index .Values  "postgresqlnotifiersmtp" "auth" "password" }}
            - name: MF_SMTP_NOTIFIER_DB_PORT
              value: {{ .Values.postgresqlnotifiersmtp.postgresqlPort | quote }}
            - name: MF_SMTP_NOTIFIER_DB_USER
              value: {{ index .Values  "postgresqlnotifiersmtp" "auth" "user" }}
            - name: MF_SMTP_NOTIFIER_PORT
              value: "{{ .Values.notifier_smtp.httpPort }}"
            - name: MF_SMTP_NOTIFIER_LOG_LEVEL
              value: {{ default .Values.defaults.logLevel .Values.notifier_smtp.logLevel }}
            - name: MF_AUTH_GRPC_URL
              value: {{ .Release.Name }}-envoy:{{ .Values.users.grpcPort }}
            - name: MF_BROKER_URL
              value: nats://{{ .Release.Name }}-nats-client:{{ .Values.defaults.natsPort }}
          image: "{{ default .Values.defaults.image.repository .Values.notifier_smtp.image.repository }}/smtp-notifier:{{ default .Values.defaults.image.tag .Values.notifier_smtp.image.tag }}"
          imagePullPolicy: {{ default .Values.defaults.image.pullPolicy .Values.notifier_smtp.image.pullPolicy }}
          name: {{ .Release.Name }}-notifier-smtp
          ports:
            - containerPort: {{ .Values.notifier_smtp.httpPort }}
              protocol: TCP
          volumeMounts:
            - mountPath: /email.tmpl
              name: email-notifier-config
              subPath: email.tmpl
            - mountPath: /smtp-notifier.tmpl
              name: email-notifier-config
              subPath: email.tmpl
            - mountPath: /config.toml
              name: email-notifier-config
              subPath: config.toml
          stdin: true
          tty: true
      {{- with .Values.defaults.image.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 12 }}
      {{- end }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      volumes:
        - configMap:
            defaultMode: 256
            name: {{ .Release.Name }}-email-notifier-config
            optional: false
          name: email-notifier-config
{{- end }}
