# Copyright (c) Mainflux
# SPDX-License-Identifier: Apache-2.0

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
{{- if .Values.ingress.annotations }}
  annotations:
{{ toYaml .Values.ingress.annotations | indent 4 }}
{{- end }}
{{- if .Values.ingress.labels }}
  labels:
{{ toYaml .Values.ingress.labels | indent 4 }}
{{- end }}
  name: {{ .Release.Name }}-nginx-ingress
spec:
  ingressClassName: nginx
  rules:
    - host: "{{ .Values.ingress.hostname }}"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: {{ .Release.Name }}-ui
                port:
                  number: {{ .Values.ui.port }}
          - path: /health
            pathType: Prefix
            backend:
              service:
                name: {{ .Release.Name }}-things
                port:
                  number: {{ .Values.things.httpPort }}
{{- if .Values.ingress.tls }}
  tls:
    - hosts:
        - {{ .Values.ingress.tls.hostname }}
      secretName: {{ .Values.ingress.tls.secret }}
{{- end }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$1
{{- if .Values.ingress.annotations }}
{{ toYaml .Values.ingress.annotations | indent 4 }}
{{- end }}
{{- if .Values.ingress.labels }}
  labels:
{{ toYaml .Values.ingress.labels | indent 4 }}
{{- end }}
  name: {{ .Release.Name }}-nginx-rewrite-ingress
spec:
  ingressClassName: nginx
  rules:
    - host: "{{ .Values.ingress.hostname }}"
      http:
        paths:
          - path: /(users.*|password.*|tokens.*)
            pathType: Prefix
            backend:
              service:
                name: {{ .Release.Name }}-users
                port:
                  number: {{ .Values.users.httpPort }}
          - path: /(things.*|channels.*|connect.*|disconnect.*)
            pathType: Prefix
            backend:
              service:
                name: {{ .Release.Name }}-things
                port:
                  number: {{ .Values.things.httpPort }}
          - path: /groups/users/?(.*)
            pathType: Prefix
            backend:
              service:
                name: {{ .Release.Name }}-users
                port:
                  number: {{ .Values.users.httpPort }}
          - path: /groups/things/?(.*)
            pathType: Prefix
            backend:
              service:
                name: {{ .Release.Name }}-things
                port:
                  number: {{ .Values.things.httpPort }}
{{- if .Values.certs.enabled }}
          - path: /(certs.*|serials.*)
            pathType: Prefix
            backend:
              service:
                name: {{ .Release.Name }}-certs
                port:
                  number: {{ .Values.certs.httpPort }}
{{- end }}
{{- if .Values.notifier_smtp.enabled }}
          - path: /smtp-notifier/?(.*)
            pathType: Prefix
            backend:
              service:
                name: {{ .Release.Name }}-notifier-smtp
                port:
                  number: {{ .Values.notifier_smtp.httpPort }}
{{- end }}
{{- if .Values.bootstrap.enabled }}
          - path: /bootstrap/?(.*)
            pathType: Prefix
            backend:
              service:
                name: {{ .Release.Name }}-bootstrap
                port:
                  number: {{ .Values.bootstrap.httpPort }}
          - path: /bs/?(.*)
            pathType: Prefix
            backend:
              service:
                name: {{ .Release.Name }}-bootstrap
                port:
                  number: {{ .Values.bootstrap.httpPort }}
{{- end }}
{{- if .Values.influxdb.enabled }}
          - path: /reader/?(.*)
            pathType: Prefix
            backend:
              service:
                name:  {{ .Release.Name }}-influxdb-reader
                port:
                  number: {{ .Values.influxdb.reader.httpPort }}
{{- end }}
{{- if .Values.twins.enabled }}
          - path: /(twins.*|states.*)
            pathType: Prefix
            backend:
              service:
                name: {{ .Release.Name }}-twins
                port:
                  number: {{ .Values.twins.httpPort }}
{{- end }}
{{- if .Values.adapter_opcua.enabled }}
          - path: /(browse.*)
            pathType: Prefix
            backend:
              service:
                name: {{ .Release.Name }}-adapter-opcua
                port:
                  number: {{ default .Values.adapter_opcua.httpPort }}
{{- end }}
{{- if .Values.ingress.tls }}
  tls:
    - hosts:
        - {{ .Values.ingress.tls.hostname }}
      secretName: {{ .Values.ingress.tls.secret }}
{{- end }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$1
{{- if and (ne .Values.nginxInternal.mtls.tls "") (ne .Values.nginxInternal.mtls.intermediateCrt "") }}
    nginx.ingress.kubernetes.io/auth-tls-pass-certificate-to-upstream: "true"
    nginx.ingress.kubernetes.io/auth-tls-secret: {{ .Release.Namespace }}/ca
    nginx.ingress.kubernetes.io/auth-tls-verify-client: "optional"
    nginx.ingress.kubernetes.io/auth-tls-verify-depth: "2"
{{- end }}
{{- if .Values.ingress.annotations }}
{{ toYaml .Values.ingress.annotations | indent 4 }}
{{- end }}
{{- if .Values.ingress.labels }}
  labels:
{{ toYaml .Values.ingress.labels | indent 4 }}
{{- end }}
  name: {{ .Release.Name }}-nginx-rewrite-ingress-http-adapter
spec:
  ingressClassName: nginx
  rules:
    - host: "{{ .Values.ingress.hostname }}"
      http:
        paths:
{{- if and (ne .Values.nginxInternal.mtls.tls "") (ne .Values.nginxInternal.mtls.intermediateCrt "") }}
          - path: /(http/?.*)
            pathType: Prefix
            backend:
              service:
                name: {{ .Release.Name }}-nginx-internal
                port:
                  number: 80
          - path: /(mqtt)
            pathType: Prefix
            backend:
              service:
                name: {{ .Release.Name }}-nginx-internal
                port:
                  number: 80
{{- else }}
          - path: /http/?(.*)
            pathType: Prefix
            backend:
              service:
                name: {{ .Release.Name }}-adapter-http
                port:
                  number: {{ .Values.adapter_http.httpPort }}
          - path: /(mqtt)
            pathType: Prefix
            backend:
              service:
                name: {{ .Release.Name }}-mqtt
                port:
                  number: {{ default .Values.mqtt.adapter.wsPort }}
{{- end }}
{{- if .Values.ingress.tls }}
  tls:
    - hosts:
        - {{ .Values.ingress.tls.hostname }}
      secretName: {{ .Values.ingress.tls.secret }}
{{- end }}
---
apiVersion: v1
kind: ConfigMap
data:
  1883: "{{ .Release.Namespace }}/{{ .Release.Name }}-envoy:1883"
  8883: "{{ .Release.Namespace }}/{{ .Release.Name }}-nginx-internal:8883"
metadata:
  name: tcp-services
  namespace: default
---
apiVersion: v1
kind: ConfigMap
data:
  5683: "{{ .Release.Namespace }}/{{ .Release.Name }}-adapter-coap:5683"
metadata:
  name: udp-services
  namespace: default