# Copyright (c) Mainflux
# SPDX-License-Identifier: Apache-2.0

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ .Release.Name }}-view-clusterrole
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: view
subjects:
- kind: ServiceAccount
  name: default
  namespace: {{ .Release.Namespace }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-mqtt
  labels:
    app: {{ .Release.Name }}
    component: mqtt
spec:
  selector:
    app: {{ .Release.Name }}
    component: mqtt
  ports:
    - port: {{ .Values.mqtt.adapter.mqttPort }}
      protocol: TCP
      name: "{{ .Values.mqtt.adapter.mqttPort }}"
    - port: {{ .Values.mqtt.adapter.wsPort }}
      protocol: TCP
      name: "{{ .Values.mqtt.adapter.wsPort }}"
  clusterIP: None
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-mqtt
spec:
  replicas: {{ .Values.defaults.replicaCount }}
  serviceName: {{ .Release.Name }}-mqtt
  selector:
    matchLabels:
      app: {{ .Release.Name }}
      component: mqtt
  template:
    metadata:
      labels:
        app: {{ .Release.Name}}
        component: mqtt
    spec:
        {{- with .Values.imagePullSecrets }}
          imagePullSecrets:
            {{- toYaml . | nindent 12 }}
        {{- end }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      securityContext:
        {{ toYaml .Values.mqtt.securityContext | nindent 8 }}
      containers:
          #broker
        - volumeMounts:
            - name: data
              mountPath: /vernemq/data
          env:
            - name: MF_MQTT_ADAPTER_LOG_LEVEL
              value: {{ .Values.mqtt.broker.logLevel }}
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: MF_MQTT_INSTANCE_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: DOCKER_VERNEMQ_LOG__CONSOLE__LEVEL
              value: {{ default .Values.defaults.logLevel .Values.mqtt.broker.logLevel }}
            - name: MF_MQTT_VERNEMQ_GRPC_POOL_SIZE
              value: "1000"
            - name: DOCKER_VERNEMQ_ALLOW_ANONYMOUS
              value: "on"
            - name: DOCKER_VERNEMQ_DISCOVERY_KUBERNETES
              value: "1"
            - name: DOCKER_VERNEMQ_KUBERNETES_LABEL_SELECTOR
              value: "app={{ .Release.Name }},component=mqtt"
            - name: DOCKER_VERNEMQ_ALLOW_REGISTER_DURING_NETSPLIT
              value: "on"
            - name: DOCKER_VERNEMQ_MAX_OFFLINE_MESSAGES
              value: "-1"
            - name: DOCKER_VERNEMQ_MAX_ONLINE_MESSAGES
              value: "-1"
            - name: DOCKER_VERNEMQ_MAX_INFLIGHT_MESSAGES
              value: "0"
            - name: DOCKER_VERNEMQ_PLUGINS__VMQ_PASSWD
              value: "off"
            - name: DOCKER_VERNEMQ_LISTENER__NR_OF_ACCEPTORS
              value: "1000"
            - name: DOCKER_VERNEMQ_LISTENER__TCP__LOCALHOST
              value: "127.0.0.1:1883"
            - name: DOCKER_VERNEMQ_LISTENER__WS__LOCALHOST
              value: "127.0.0.1:8080"
          image: "{{ default .Values.defaults.image.repository .Values.mqtt.broker.image.repository }}:{{ default .Values.defaults.image.tag .Values.mqtt.broker.image.tag }}"
          imagePullPolicy: {{ default .Values.defaults.image.pullPolicy .Values.mqtt.broker.image.pullPolicy }}
          name: {{ .Release.Name }}-broker-mqtt
          ports:
            - containerPort: 1883
              protocol: TCP
            - containerPort: 8080
              protocol: TCP
            - containerPort: 8880
              protocol: TCP
            - containerPort: 8888
              protocol: TCP
            - containerPort: 44053
              protocol: TCP
            - containerPort: 4369
              protocol: TCP
            - containerPort: 9100
              protocol: TCP
            - containerPort: 9101
              protocol: TCP
            - containerPort: 9102
              protocol: TCP
            - containerPort: 9103
              protocol: TCP
            - containerPort: 9104
              protocol: TCP
            - containerPort: 9105
              protocol: TCP
            - containerPort: 9106
              protocol: TCP
            - containerPort: 9107
              protocol: TCP
            - containerPort: 9108
              protocol: TCP
            - containerPort: 9109
              protocol: TCP
          stdin: true
          tty: true
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8888
              scheme: HTTP
            initialDelaySeconds: 90
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8888
              scheme: HTTP
            initialDelaySeconds: 90
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          #adapter
        - name: {{ .Release.Name }}-adapter-mqtt
          image: "{{ default .Values.defaults.image.repository .Values.mqtt.adapter.image.repository }}:{{ default .Values.defaults.image.tag .Values.mqtt.adapter.image.tag }}"
          imagePullPolicy: {{ default .Values.defaults.image.pullPolicy .Values.mqtt.adapter.image.pullPolicy}}
          ports:
          - containerPort: {{ .Values.mqtt.adapter.mqttPort }}
            protocol: TCP
          - containerPort: {{ .Values.mqtt.adapter.wsPort }}
            protocol: TCP
          stdin: true
          tty: true
          env:
            - name: MF_MQTT_ADAPTER_LOG_LEVEL
              value: {{ default .Values.defaults.logLevel .Values.mqtt.adapter.logLevel }}
            - name: MF_MQTT_ADAPTER_MQTT_PORT
              value: "{{ .Values.mqtt.adapter.mqttPort }}"
            - name: MF_MQTT_ADAPTER_WS_PORT
              value: "{{ .Values.mqtt.adapter.wsPort }}"
            - name: MF_MQTT_ADAPTER_ES_URL
              value: {{ .Release.Name }}-redis-streams-master:{{ .Values.mqtt.redisESPort }}
            - name: MF_BROKER_URL
              value: nats://{{ .Release.Name }}-nats-client:{{ .Values.defaults.natsPort }}
            - name: MF_THINGS_AUTH_GRPC_URL
              value:  {{ .Release.Name }}-envoy:{{ .Values.things.authGrpcPort }}
            - name: MF_JAEGER_URL
              value: "http://{{ .Release.Name }}-jaeger-collector:{{ .Values.defaults.jaegerCollectorPort }}/api/traces"
            - name: MF_MQTT_ADAPTER_MQTT_TARGET_HOST
              value: localhost
            - name: MF_MQTT_ADAPTER_MQTT_TARGET_PORT
              value: "{{ .Values.mqtt.broker.mqttPort }}"
            - name: MF_MQTT_ADAPTER_WS_TARGET_HOST
              value: localhost
            - name: MF_MQTT_ADAPTER_WS_TARGET_PORT
              value: "{{ .Values.mqtt.broker.wsPort }}"
            - name: MF_MQTT_ADAPTER_THINGS_TIMEOUT
              value: "15"
            - name: MF_AUTH_CACHE_URL
              value: {{ .Release.Name }}-redis-auth-master:{{ .Values.mqtt.redisCachePort }}
            - name: MF_MQTT_ADAPTER_MQTT_TARGET_HEALTH_CHECK
              value: http://localhost:8888/health
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8888
              scheme: HTTP
            initialDelaySeconds: 90
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: {{ .Values.mqtt.broker.persistentVolume.size }}
