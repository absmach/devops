# Copyright (c) Abstract Machines
# SPDX-License-Identifier: Apache-2.0

{{- if .Values.ui.enabled }}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-ui
spec:
  replicas: {{ default .Values.defaults.replicaCount .Values.ui.replicaCount | int64 }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
      component: ui
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "{{ .Values.ui.httpPort }}"
        prometheus.io/scrape: "true"
      labels:
        app: {{ .Release.Name }}
        component: ui
    spec:
      {{- with (default .Values.defaults.image.pullSecrets .Values.ui.image.pullSecrets) }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      containers:
        - name: {{ .Release.Name }}-ui
          image: "{{ default (printf "%s/ui" .Values.defaults.image.rootRepository) .Values.ui.image.repository }}:{{ default .Values.defaults.image.tag .Values.ui.image.tag }}"
          imagePullPolicy: {{ default .Values.defaults.image.pullPolicy .Values.ui.image.pullPolicy }}
          env:
            - name: MG_UI_LOG_LEVEL
              value: {{ default .Values.defaults.logLevel .Values.ui.logLevel | quote }}
            - name: MG_UI_DOCKER_ACCEPT_EULA
              value: "yes"
            - name: MG_DOMAINS_URL
              value: {{ default (printf "http://%s-domains:%s" .Release.Name (.Values.domains.httpPort | toString )) .Values.ui.domainsUrl }}
            - name: MG_USERS_URL
              value: {{ default (printf "http://%s-users:%s" .Release.Name (.Values.users.httpPort | toString )) .Values.ui.usersUrl }}
            - name: MG_CLIENTS_URL
              value: {{ default (printf "http://%s-clients:%s" .Release.Name (.Values.clients.httpPort | toString )) .Values.ui.clientsUrl }}
            - name: MG_CHANNELS_URL
              value: {{ default (printf "http://%s-channels:%s" .Release.Name (.Values.channels.httpPort | toString )) .Values.ui.channelsUrl }}
            - name: MG_GROUPS_URL
              value: {{ default (printf "http://%s-groups:%s" .Release.Name (.Values.groups.httpPort | toString )) .Values.ui.groupsUrl }}
            - name: MG_CERTS_URL
              value: {{ default (printf "http://%s-certs:%s" .Release.Name (.Values.certs.httpPort | toString )) .Values.ui.certsUrl }}
            - name: MG_HTTP_ADAPTER_URL
              value: {{ default (printf "http://%s-adapter-http:%s" .Release.Name (.Values.adapter_http.httpPort | toString )) .Values.ui.httpAdapterUrl }}
            - name: MG_BACKEND_URL
              value: {{ default (printf "http://%s-backend:%s" .Release.Name (.Values.uibackend.httpPort | toString )) .Values.ui.backendUrl }}
            - name: MG_JOURNAL_URL
              value: {{ default (printf "http://%s-journal:%s" .Release.Name (.Values.journal.httpPort | toString )) .Values.ui.journalUrl }}
            - name: MG_GOOGLE_CLIENT_ID
              value: {{ .Values.ui.googleClientID | quote }}
            - name: MG_GOOGLE_CLIENT_SECRET
              value: {{ .Values.ui.googleClientSecret | quote }}
            - name: MG_GOOGLE_REDIRECT_URL
              value: {{ printf "%s%s" (.Values.ui.googleRedirectHostname | default (include "supermq.hostname" .)) (.Values.ui.googleRedirectPath | default "/api/oauth/callback/google") | quote }}
            - name: MG_GOOGLE_STATE
              value: {{ .Values.ui.googleState | quote }}
            - name: MG_UI_NAME
              value: {{ .Values.ui.name | quote }}
            - name: MG_UI_BASE_PATH
              value: {{ .Values.ui.basePath | quote }}
            - name: NEXT_PUBLIC_MG_UI_BASE_PATH
              value: {{ .Values.ui.nextPublicBasePath | default .Values.ui.basePath | quote }}
            - name: NEXT_PUBLIC_NEXTAUTH_BASE_PATH
              value: {{ .Values.ui.nextPublicNextAuthBasePath | quote }}
            - name: MG_UI_TYPE
              value: {{ .Values.ui.type | quote }}
            - name: NEXT_PUBLIC_BACKEND_URL
              value: {{ .Values.ui.nextPublicBackendUrl | default (printf "%s/api/uibackend" (include "supermq.hostname" .)) | quote }}
            - name: NEXTAUTH_SECRET
              value: {{ .Values.ui.nextAuthSecret | quote }}
            - name: RUNTIME_ENV
              value: production
            - name: NEXTAUTH_URL
              value: {{ .Values.ui.nextAuthUrl  | default (printf "%s%s" (include "supermq.hostname" .) .Values.ui.nextPublicNextAuthBasePath) | quote }}
            - name: NEXT_PUBLIC_HOST_URL
              value: {{ .Values.ui.nextPublicHostUrl | default (printf "%s%s" (include "supermq.hostname" .) .Values.ui.basePath) | quote }}
            - name: MG_PROFILE_PICTURE_URL
              value: {{ .Values.ui.mgProfilePictureUrl | default (printf "%s/api/uibackend" (include "supermq.hostname" .)) | quote }}
          ports:
            - containerPort: {{ .Values.ui.httpPort }}
              protocol: TCP
          stdin: true
          tty: true
      {{- with .Values.ui.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.ui.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.ui.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
